[GENERAL]
description = BioSQL - 1 Mbp of chr 2 of Arabidopsis
db_adaptor  = Bio::Das::BioSQL
db_args     = driver    mysql
	      dbname    bioperl
	      namespace arabidopsis
	      version 	3
	      host      hostname
	      user      username
          pass     	password 
		  port 3306

plugins = SequenceDumper FastaDumper RestrictionAnnotator

# Web site configuration info
stylesheet  = /gbrowse/gbrowse.css
buttons     = /gbrowse/images/buttons
tmpimages   = /gbrowse/tmp

# Default glyph settings
glyph       = generic
height      = 8
bgcolor     = cyan
fgcolor     = cyan
label density = 25
bump density  = 100

# where to link to when user clicks in detaild view
link          = http://localhost/perl/gbrowse?ref=$ref;start=$start;stop=$end

# what image widths to offer
image widths  = 450 640 800 1024

# default width of detailed view (pixels)
default width = 800
default features = CDS 
				Genes
	           #repeat_region

# max and default segment sizes for detailed view
max segment     = 500000
default segment = 50000

# zoom levels
zoom levels    = 100 200 1000 2000 5000 10000 20000 40000 100000 200000 500000 1000000
low res = 200000

# colors of the overview, detailed map and key
overview bgcolor = wheat
detailed bgcolor = white
key bgcolor      = beige

footer = <hr>
	<table width="100%">
	<TR>
	<TD align="LEFT" class="databody">
	For the source code for this browser, see the <a href="http://www.gmod.org">
	Generic Model Organism Database Project.</a>  For other questions, send
	mail to <a href="mailto:lstein@cshl.org">lstein@cshl.org</a>.
	</TD>
	</TR>
	</table>
	<hr>
	<pre>$Id: 06.biosql.conf,v 1.2 2004-02-16 11:29:41 lstein Exp $</pre>

# examples to show in the introduction
examples = AP000868

# "automatic" classes to try when an unqualified identifier is given
automatic classes = Accession

init_code = *Bio::SeqFeature::Generic::type = \&Bio::SeqFeature::Generic::primary_tag;

# the remainder of the sections configure particular features to show

[CDS]
feature      = CDS
glyph        = transcript2
#glyph        = generic
bgcolor      = turquoise
fgcolor      = black
height       = 10
connector    = solid

label        = sub {
  my $feature = shift;
  my @notes;
	if ($feature->primary_tag eq "CDS")
 {
  foreach (qw(product gene)) {
    next unless $feature->has_tag($_);
    @notes = $feature->each_tag_value($_);
    last;
  }
  return $notes[0];
 }
 else
 {
 return $feature->display_name;
 }
 }

description  = sub {
  my $feature = shift;
 my @notes;
 if ($feature->primary_tag eq "CDS")
 {
 foreach (qw(note)) {
    next unless $feature->has_tag($_);
    @notes = $feature->each_tag_value($_);
    last;
  }
  return unless @notes;
  substr($notes[0],30) = '...' if length $notes[0] > 30;
  return $notes[0];
 }
 else
 {
  my $description;
  foreach ($feature->all_tags) {
    my @values = $feature->each_tag_value($_);
    $description .= $_ eq 'note' ? "@values" : "$_=@values; ";
  }
  $description =~ s/; $//; # get rid of last
  return $description;
 }
  }
# key          = Predicted transcripts

[REPEAT]
feature       = repeat_region
glyph         = generic
bgcolor       = red
height        = 10
description   = 1
key           = Repeat regionss

[TranslationF]
glyph        = translation
global feature = 1
frame0       = cadetblue
frame1       = blue
frame2       = darkblue
height       = 20
fgcolor      = purple
strand       = +1
translation  = 3frame
key          = 3-frame translation (forward)

[DNA/GC Content]
glyph        = dna
global feature = 1
height       = 40
do_gc        = 1
fgcolor      = red
axis_color   = blue

[TranslationR]
glyph        = translation
global feature = 1
frame0       = darkred
frame1       = red
frame2       = crimson
height       = 20
fgcolor      = blue
strand       = -1
translation  = 3frame
key          = 3-frame translation (reverse)

[Genes]
feature      = gene:sgd
glyph        = generic
bgcolor      = yellow
forwardcolor = yellow
reversecolor = turquoise
strand_arrow = 1
height       = 6
description  = 1
key          = Named gene

