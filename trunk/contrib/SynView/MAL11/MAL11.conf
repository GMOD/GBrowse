[GENERAL]
description   = P. falciparum chromosome 11
db_adaptor    = Bio::DB::GFF
db_args       = -adaptor memory
				-dir    '/var/www/html/gbrowse/databases/MAL11'

aggregators = transcript alignment orf
plugins = BatchDumper FastaDumper RestrictionAnnotator FilterTest

# Web site configuration info
stylesheet  = /gbrowse/gbrowse.css
buttons     = /gbrowse/images/buttons
js          = /gbrowse/js
tmpimages   = /gbrowse/tmp

# where to link to when user clicks in detailed view
link          = AUTO

# what image widths to offer
image widths  = 450 640 800 1024

# default width of detailed view (pixels)
default width = 800
default features = Genes

# The class of the feature that is used as the reference for all others
# "Sequence" is the default - change it if you use something else
reference class = Sequence

# max and default segment sizes for detailed view
max segment     = 500000
default segment = 50000

# zoom levels
zoom levels    = 100 200 1000 2000 5000 10000 20000 40000 100000 200000 500000 1000000

# whether to show the sources popup menu (0=false, 1=true; defaults to true)
show sources   = 1

# colors of the overview, detailed map and key
overview bgcolor = lightgrey
detailed bgcolor = lightgoldenrodyellow
key bgcolor      = beige

# examples to show in the introduction
examples = MAL11:370,500..410,000

# "automatic" classes to try when an unqualified identifier is given
automatic classes = Symbol Gene Clone

### HTML TO INSERT AT VARIOUS STRATEGIC LOCATIONS ###
# inside the <head></head> section
head = 

# at the top...
header =

# a footer
footer = 

# Various places where you can insert your own HTML -- see configuration docs
html1 = 
html2 = 
html3 = 
html4 = 
html5 = 
html6 = 

postgrid = sub {
             my ($gd, $panel) = @_; 
			 $gd->alphaBlending(0); 
			 $gd->saveAlpha(1); 
			 $panel->boxes(); # causes the layout to be calculated 
			 use Tie::IxHash; 
			 my %orthologs; 
			 my %location; 
			 my %drawn; 
			 my %newdrawn; 
			 for my $track (@{$panel->{tracks}}) { 
			   for my $part (@{$track->{parts}}) { 
			     my $feature = $part->{feature}; 
				 next unless $feature->isa("Bio::SeqFeatureI"); 
				 my @orthologs = $feature->get_tag_values("Ortholog"); 
				 next unless @orthologs; 
				 my $gene = $feature->name; 
				 for my $ortholog (@orthologs) { 
				   unless (exists $orthologs{$ortholog}) { 
				     tie(%{$orthologs{$ortholog}}, "Tie::IxHash"); 
				   } 
				   $orthologs{$ortholog}->{$gene}++; 
				 } 
				 my $yoffset = $panel->track_position($track); 
				 my $padleft = $panel->pad_left(); 
				 my ($x1, $y1, $x2, $y2) = $part->bounds(); 
				 $x1 += $padleft; 
				 $x2 += $padleft; 
				 $y1 += $yoffset - 2; 
				 $y2 += $yoffset + 2; 
				 $location{$gene} = [ $x1, $y1, $x2, $y2 ]; 
				 if (exists $orthologs{$gene}) { 
				   ORTHOLOGS : for my $ortholog (keys %{$orthologs{$gene}}) { 
				     unless (exists $location{$ortholog}) { 
					   warn "no location for $ortholog (ortholog of $gene)\n"; 
					   next ORTHOLOGS; 
					 } 
					 if ($drawn{$ortholog}) { 
					   for my $coortholog (@orthologs) { 
					     next ORTHOLOGS if $drawn{$ortholog}->{$coortholog}; 
					   } 
					 } 
					 $newdrawn{$ortholog}->{$gene}++; 
					 my ($ox1, $oy1, $ox2, $oy2) = @{$location{$ortholog}}; 
					 my $polygon = GD::Polygon->new(); 
					 $polygon->addPt($ox1, $oy2); 
					 $polygon->addPt($ox2, $oy2); 
					 $polygon->addPt($x2, $y1); 
					 $polygon->addPt($x1, $y1); 
					 $gd->filledPolygon($polygon, $gd->colorAllocateAlpha($panel->color_name_to_rgb("darkgray"), 100)); 
					 # $gd->openPolygon($polygon, $gd->colorAllocateAlpha($panel->color_name_to_rgb("lightsteelblue"), 0)); 
					 $gd->line($ox1, $oy2, $x1, $y1, $panel->translate_color("lightsteelblue")); 
					 $gd->line($ox2, $oy2, $x2, $y1, $panel->translate_color("lightsteelblue")); 
				   } 
				 } 
			   } 
			   while (my ($key, $value) = each %newdrawn) { 
			     $drawn{$key} = { %{$drawn{$key} || {}}, %{$value || {}} }; 
			   } 
			   %newdrawn = undef; 
			 } 
		   } 

# Default glyph settings
[TRACK DEFAULTS]
glyph       = generic
height      = 8
bgcolor     = cyan
fgcolor     = cyan
label density = 25
bump density  = 100

### TRACK CONFIGURATION ####
# the remainder of the sections configure individual tracks

[Genes]
feature      = gene:annotation
glyph        = processed_transcript
bgcolor      = blue
font2color   = darkgrey
height       = 10
description  = 1 
label        = 1 
link         = http://plasmodb.org/showRecord.do?name=GeneRecordClasses.GeneRecordClass&primary_key=$name 
key          = Annotated Genes 
citation     = Structural and functional gene annotation provided by the sequencing centers.

[SyntenyGenes]
feature      = gene:syntenyVivaxMC
glyph        = processed_transcript
bgcolor      = lightblue
fgcolor      = blue
font2color   = darkgrey
height       = 10
description  = 1 
label        = 1 
link         = http://plasmodb.org/showRecord.do?name=GeneRecordClasses.GeneRecordClass&primary_key=$name 
key          = Synteny Genes 
citation     = Structural and functional gene annotation provided by the sequencing centers.
